spring:
  datasource:
    #连接数据库的账号
    username: root
    #连接数据库的密码
    password:
    #连接数据库的url
    url: jdbc:mysql://localhost:3306/fcjy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=GMT%2B8
    #连接数据库的驱动类
    #mysql8之前用的是：com.mysql.jdbc.Driver。
    #mysql8之后用的是：com.mysql.cj.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    druid:
      #      初始化数量
      initial-Size: 5
      #最小保持数量 不再使用
      minIdle: 5
      maxActive: 5
      # 配置获取连接等待超时的时间
      max-Wait: 1000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-Evictable-Idle-TimeMillis: 2000
      max-Evictable-Idle-TimeMillis: 5000
      #      validationQuery: SELECT 1 FROM DUAL
      validationQuery: SELECT 'x'
      testWhileIdle: true
      #申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      testOnBorrow: false
      #归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      #当数据库抛出不可恢复的异常时,抛弃该连接
      exception-sorter-class-name: com.alibaba.druid.pool.vendor.MySqlExceptionSorter
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      #当值大于0时poolPreparedStatements会自动修改为true
      maxPoolPreparedStatementPerConnectionSize: 25
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500
      # 合并多个DruidDataSource的监控数据
      useGlobalDataSourceStat: true
      stat-view-servlet:
        enabled: true
      keep-alive: true
#        login-username: admin
#        login-password: admin



server:
  port: 8080
  servlet:
    context-path: /fcjy
  tomcat:
    max-threads: 200


mybatis:
  # mybatis配置文件所在路径
  config-location: classpath:mybatis/mybatis.cfg.xml
  # 定义所有操作类的别名所在包
  type-aliases-package: com.fcjy.mybatis
  # 所有的mapper映射文件
  mapper-locations:
    - classpath:mybatis/mapper/**/*.xml
management:
  endpoints:
    web:
      exposure:
        include: env
  health:
    defaults:
      enabled: true

eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: false
    fetch-registry: false

